/components/CryptoTable.js:

import React from 'react';
import { useSelector } from 'react-redux';
import { selectAssets } from '../redux/slices/cryptoSlice';
import CryptoRow from './CryptoRow';

const CryptoTable = () => {
  const assets = useSelector(selectAssets);

  return (
    <div className="container">
      <h2>Crypto Price Tracker</h2>
      <table className="table table-striped">
        <thead>
          <tr>
            <th>#</th>
            <th>Logo</th>
            <th>Name</th>
            <th>Symbol</th>
            <th>Price</th>
            <th>1h %</th>
            <th>24h %</th>
            <th>7d %</th>
            <th>Market Cap</th>
            <th>24h Volume</th>
            <th>Circulating Supply</th>
            <th>Max Supply</th>
            <th>7D Chart</th>
          </tr>
        </thead>
        <tbody>
          {assets.map((asset, index) => (
            <CryptoRow key={index} asset={asset} />
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default CryptoTable;





/components/CryptoRow.js:

import React from 'react';

const CryptoRow = ({ asset }) => {
  return (
    <tr>
      <td>{asset.id}</td>
      <td><img src={`/assets/logos/${asset.symbol}.png`} alt={asset.symbol} width="30" /></td>
      <td>{asset.name}</td>
      <td>{asset.symbol}</td>
      <td>${asset.price.toFixed(2)}</td>
      <td className={asset.change1h >= 0 ? 'text-success' : 'text-danger'}>{asset.change1h.toFixed(2)}%</td>
      <td className={asset.change24h >= 0 ? 'text-success' : 'text-danger'}>{asset.change24h.toFixed(2)}%</td>
      <td className={asset.change7d >= 0 ? 'text-success' : 'text-danger'}>{asset.change7d.toFixed(2)}%</td>
      <td>${asset.marketCap.toLocaleString()}</td>
      <td>{asset.volume.toLocaleString()}</td>
      <td>{asset.circulatingSupply.toLocaleString()}</td>
      <td>{asset.maxSupply.toLocaleString()}</td>
      <td><img src={`/assets/logos/${asset.symbol}-7d-chart.png`} alt="7D chart" width="100" /></td>
    </tr>
  );
};

export default CryptoRow;




